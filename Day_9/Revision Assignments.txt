Revision_1) 
Define a class “MyClass”. Define a class “Everything” and define a member function with variable no. of argument inside it. Define  a class Demo1  and define main function in it. From main function , call the function of class Everything and make sure you can pass any arguments , it will take and display. It should even take instance of “MyClass” and display.

Revision_2)
Define a class Sample with member variable “char ch” and a parameterized constructor. Create some instances(at least 2) of this class by passing any alphabet.  Now achieve following tasks:

a) when you print the reference it should be display the character which was passed during instantiation.
b) if two instances have same character or an alphabet, their "equals()" should return true and obviously "hashCode()" also should be same.


Revision_3) 
create 4 classes A,B,C,D with member functions Afun(),Bfun(),Cfun() and Dfun() respectively.
now define "Demo" class with main function. Inside main function create array of Object class which will store instances of above mentioned classes. Traverse through this array and call "Cfun()" of class C only.

Revision_4) 
create a parent class "Artist" with a member function "void perform()".
now derive following child classes from "Artist"
	Actor,Singer and Musician and override "perform" in these classes to write the specific task.
inside "Actor" class define one more method
	void changeGateUp()
	{
		S.o.p("as per the role demands");
	}

now create a Demo class with main function.
inside main function create array of "Artist" with size 3.
store instances of the above child classes in it.
Now traverse through the array and invoke "perform" of each child class. In addition to this wherever "Actor" object is there inside the array , also perform "changeGateUp()" method.

Revision_5) 
	it's a Developer- Client example
on a Developer side:

create a checked exception "VotingNotAllowedException".

define a class "Person" with a instance member "private String name" and "private int age"
define parameterized constructor and toString() method also.
In the parameterized constructor check the age passed while instantiating the class. if the age is less than 18 , constructor should raise "VotingNotAllowedException"
	[ it should not handle the exception]

	create jar file and documentation 


on Client side:

Define a class "Demo" with main function.
From main function create an object of "Person" and display that object.

Revision_6)
write a program to display the method names inside the class which is passed as a command line argument.

Revision_7)
on the developer side create 4 classes [ First,Second,Third and Fourth] with only "toString()" method which should return the respective class name.

create necessary jar file and documentation


on the client side
	create a class "Demo" with main function and 
	static Object returnObject(String name)  method. 

this "returnObject()" method should 
	create the object of the given inside "name" parameter using Reflection API and return it.

from the main function invoke "returnObject()" by passing name of either "First" or "Second" or "Third" or "Fourth" only. Then main function should collect the object given by "returnObject()" method and display it.



 

		