Animal arr[]=new Dog[2];  // allowed because during runtime if you say

arr[1]=new Cat();
There is a JVM to check what is illegal and give you ArrayStoreException.

But

List<Animal> mylist=new ArrayList<Dog>(); not allowed because if you say

mylist.add(new Cat()) 
even though it is illegal,JVM will not be able to detect it because it doesn't know anything about generics. All generic information compiler removes at the time of compilation. ( Type Erasure )
Hence in case of generics compiler itself has to consider all possible scenarios of runtime and guide you accordingly.


you can do following
List<Animal>mylist=new ArrayList<Animal>();
mylist.add(new Dog());
mylist.add(new Cat());

e.g.

	void disp(List<Animal> arr)
	{
		arr.add(new Dog());
		arr.add(new Cat());
	}

	disp(new ArrayList<Animal>());


